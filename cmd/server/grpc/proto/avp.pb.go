// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd/server/grpc/proto/avp.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartProcessRequest struct {
	Element              *Element `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartProcessRequest) Reset()         { *m = StartProcessRequest{} }
func (m *StartProcessRequest) String() string { return proto.CompactTextString(m) }
func (*StartProcessRequest) ProtoMessage()    {}
func (*StartProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d75c8f44d55bcf, []int{0}
}

func (m *StartProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartProcessRequest.Unmarshal(m, b)
}
func (m *StartProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartProcessRequest.Marshal(b, m, deterministic)
}
func (m *StartProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartProcessRequest.Merge(m, src)
}
func (m *StartProcessRequest) XXX_Size() int {
	return xxx_messageInfo_StartProcessRequest.Size(m)
}
func (m *StartProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartProcessRequest proto.InternalMessageInfo

func (m *StartProcessRequest) GetElement() *Element {
	if m != nil {
		return m.Element
	}
	return nil
}

type StartProcessReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartProcessReply) Reset()         { *m = StartProcessReply{} }
func (m *StartProcessReply) String() string { return proto.CompactTextString(m) }
func (*StartProcessReply) ProtoMessage()    {}
func (*StartProcessReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d75c8f44d55bcf, []int{1}
}

func (m *StartProcessReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartProcessReply.Unmarshal(m, b)
}
func (m *StartProcessReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartProcessReply.Marshal(b, m, deterministic)
}
func (m *StartProcessReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartProcessReply.Merge(m, src)
}
func (m *StartProcessReply) XXX_Size() int {
	return xxx_messageInfo_StartProcessReply.Size(m)
}
func (m *StartProcessReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartProcessReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartProcessReply proto.InternalMessageInfo

type StopProcessRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopProcessRequest) Reset()         { *m = StopProcessRequest{} }
func (m *StopProcessRequest) String() string { return proto.CompactTextString(m) }
func (*StopProcessRequest) ProtoMessage()    {}
func (*StopProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d75c8f44d55bcf, []int{2}
}

func (m *StopProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopProcessRequest.Unmarshal(m, b)
}
func (m *StopProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopProcessRequest.Marshal(b, m, deterministic)
}
func (m *StopProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopProcessRequest.Merge(m, src)
}
func (m *StopProcessRequest) XXX_Size() int {
	return xxx_messageInfo_StopProcessRequest.Size(m)
}
func (m *StopProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopProcessRequest proto.InternalMessageInfo

type StopProcessReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopProcessReply) Reset()         { *m = StopProcessReply{} }
func (m *StopProcessReply) String() string { return proto.CompactTextString(m) }
func (*StopProcessReply) ProtoMessage()    {}
func (*StopProcessReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d75c8f44d55bcf, []int{3}
}

func (m *StopProcessReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopProcessReply.Unmarshal(m, b)
}
func (m *StopProcessReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopProcessReply.Marshal(b, m, deterministic)
}
func (m *StopProcessReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopProcessReply.Merge(m, src)
}
func (m *StopProcessReply) XXX_Size() int {
	return xxx_messageInfo_StopProcessReply.Size(m)
}
func (m *StopProcessReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StopProcessReply.DiscardUnknown(m)
}

var xxx_messageInfo_StopProcessReply proto.InternalMessageInfo

// Element describes an a/v process
type Element struct {
	Mid                  string   `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Rid                  string   `protobuf:"bytes,2,opt,name=rid,proto3" json:"rid,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Config               []byte   `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Element) Reset()         { *m = Element{} }
func (m *Element) String() string { return proto.CompactTextString(m) }
func (*Element) ProtoMessage()    {}
func (*Element) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d75c8f44d55bcf, []int{4}
}

func (m *Element) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Element.Unmarshal(m, b)
}
func (m *Element) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Element.Marshal(b, m, deterministic)
}
func (m *Element) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Element.Merge(m, src)
}
func (m *Element) XXX_Size() int {
	return xxx_messageInfo_Element.Size(m)
}
func (m *Element) XXX_DiscardUnknown() {
	xxx_messageInfo_Element.DiscardUnknown(m)
}

var xxx_messageInfo_Element proto.InternalMessageInfo

func (m *Element) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *Element) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *Element) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Element) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*StartProcessRequest)(nil), "avp.StartProcessRequest")
	proto.RegisterType((*StartProcessReply)(nil), "avp.StartProcessReply")
	proto.RegisterType((*StopProcessRequest)(nil), "avp.StopProcessRequest")
	proto.RegisterType((*StopProcessReply)(nil), "avp.StopProcessReply")
	proto.RegisterType((*Element)(nil), "avp.Element")
}

func init() { proto.RegisterFile("cmd/server/grpc/proto/avp.proto", fileDescriptor_52d75c8f44d55bcf) }

var fileDescriptor_52d75c8f44d55bcf = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0xb5, 0x76, 0x6c, 0xf8, 0xad, 0x87, 0xf9, 0x4d, 0x67, 0xd9, 0xc5, 0xd1, 0x83, 0xec, 0xb2,
	0x06, 0xe6, 0x59, 0xc4, 0x81, 0xf7, 0xd1, 0x81, 0xa0, 0xb7, 0x2e, 0x8d, 0x35, 0xb0, 0x36, 0x9f,
	0x69, 0x56, 0xd8, 0x5f, 0xf0, 0x57, 0x4b, 0xb2, 0x0a, 0xab, 0xeb, 0x29, 0x2f, 0xef, 0x7d, 0xdf,
	0xcb, 0x7b, 0x04, 0xee, 0x79, 0x91, 0xb1, 0x4a, 0xe8, 0x5a, 0x68, 0x96, 0x6b, 0xe2, 0x8c, 0xb4,
	0x32, 0x8a, 0xa5, 0x35, 0xc5, 0x0e, 0xa1, 0x9f, 0xd6, 0x14, 0x3d, 0xc1, 0x78, 0x63, 0x52, 0x6d,
	0xd6, 0x5a, 0x71, 0x51, 0x55, 0x89, 0xf8, 0xde, 0x8b, 0xca, 0xe0, 0x03, 0x0c, 0xc4, 0x4e, 0x14,
	0xa2, 0x34, 0xa1, 0x37, 0xf3, 0xe6, 0xc3, 0x65, 0x10, 0xdb, 0xc5, 0xd7, 0x23, 0x97, 0xfc, 0x89,
	0xd1, 0x18, 0xae, 0xdb, 0xeb, 0xb4, 0x3b, 0x44, 0x37, 0x80, 0x1b, 0xa3, 0xa8, 0x6d, 0x19, 0x21,
	0x8c, 0x5a, 0xac, 0x9d, 0x7c, 0x87, 0x41, 0x63, 0x89, 0x23, 0xf0, 0x0b, 0x99, 0xb9, 0xd7, 0xae,
	0x12, 0x0b, 0x2d, 0xa3, 0x65, 0x16, 0x5e, 0x1e, 0x19, 0x2d, 0x33, 0x44, 0xe8, 0x99, 0x03, 0x89,
	0xd0, 0x77, 0x94, 0xc3, 0x38, 0x81, 0x3e, 0x57, 0xe5, 0xa7, 0xcc, 0xc3, 0xde, 0xcc, 0x9b, 0x07,
	0x49, 0x73, 0x5b, 0xfe, 0x78, 0xe0, 0xbf, 0xbc, 0xad, 0x71, 0x05, 0xc1, 0x69, 0x42, 0x0c, 0x5d,
	0x91, 0x8e, 0xce, 0xd3, 0x49, 0x87, 0x62, 0x43, 0x5e, 0xe0, 0x33, 0x0c, 0x4f, 0xa2, 0xe3, 0x5d,
	0x33, 0xf8, 0xbf, 0xe2, 0xf4, 0xf6, 0x5c, 0x70, 0x06, 0x2b, 0xf6, 0xb1, 0xc8, 0xa5, 0xf9, 0xda,
	0x6f, 0x63, 0xae, 0x0a, 0x46, 0x52, 0x95, 0x4c, 0xaa, 0x72, 0x91, 0xd6, 0xc4, 0x3a, 0x7f, 0x69,
	0xdb, 0x77, 0xc7, 0xe3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0x6d, 0x55, 0x1c, 0xc5, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AVPClient is the client API for AVP service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AVPClient interface {
	StartProcess(ctx context.Context, in *StartProcessRequest, opts ...grpc.CallOption) (*StartProcessReply, error)
	StopProcess(ctx context.Context, in *StopProcessRequest, opts ...grpc.CallOption) (*StopProcessReply, error)
}

type aVPClient struct {
	cc *grpc.ClientConn
}

func NewAVPClient(cc *grpc.ClientConn) AVPClient {
	return &aVPClient{cc}
}

func (c *aVPClient) StartProcess(ctx context.Context, in *StartProcessRequest, opts ...grpc.CallOption) (*StartProcessReply, error) {
	out := new(StartProcessReply)
	err := c.cc.Invoke(ctx, "/avp.AVP/StartProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aVPClient) StopProcess(ctx context.Context, in *StopProcessRequest, opts ...grpc.CallOption) (*StopProcessReply, error) {
	out := new(StopProcessReply)
	err := c.cc.Invoke(ctx, "/avp.AVP/StopProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AVPServer is the server API for AVP service.
type AVPServer interface {
	StartProcess(context.Context, *StartProcessRequest) (*StartProcessReply, error)
	StopProcess(context.Context, *StopProcessRequest) (*StopProcessReply, error)
}

// UnimplementedAVPServer can be embedded to have forward compatible implementations.
type UnimplementedAVPServer struct {
}

func (*UnimplementedAVPServer) StartProcess(ctx context.Context, req *StartProcessRequest) (*StartProcessReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartProcess not implemented")
}
func (*UnimplementedAVPServer) StopProcess(ctx context.Context, req *StopProcessRequest) (*StopProcessReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopProcess not implemented")
}

func RegisterAVPServer(s *grpc.Server, srv AVPServer) {
	s.RegisterService(&_AVP_serviceDesc, srv)
}

func _AVP_StartProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AVPServer).StartProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/avp.AVP/StartProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AVPServer).StartProcess(ctx, req.(*StartProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AVP_StopProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AVPServer).StopProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/avp.AVP/StopProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AVPServer).StopProcess(ctx, req.(*StopProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AVP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "avp.AVP",
	HandlerType: (*AVPServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartProcess",
			Handler:    _AVP_StartProcess_Handler,
		},
		{
			MethodName: "StopProcess",
			Handler:    _AVP_StopProcess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmd/server/grpc/proto/avp.proto",
}
